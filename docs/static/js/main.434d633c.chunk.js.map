{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","name","id","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","propTypes","PropTypes","func","isRequired","divRoot","document","querySelector","ReactDom","render"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAkBnBG,KAAK,GACLC,GAAG,Q,+CC1BEC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLZ,GAAIY,EAAIZ,GACRa,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXjB,kBAcdM,GAdc,4CAAH,sDCEPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACnC,OACE,sBAAKa,UAAU,yCAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCDGO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDbmBK,CAAazB,GAA/BO,EAAR,EAAQA,KAAMY,EAAd,EAAcA,QAEd,OACE,qCACE,6BAAKnB,IAEJmB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SACGR,EAAKE,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIZ,aEQxB4B,EAlBM,WACnB,MAAoC1C,mBAAS,CAAC,SAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG4C,EAAWlB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YAS/BlB,EAAY8C,UAAY,CACtB7C,cAAe8C,IAAUC,KAAKC,Y,UCtB1BC,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.434d633c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((cats) => [inputValue, ...cats]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        name=\"\"\r\n        id=\"\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=wiBSimkvpMgZcO3W4kQuWP3QE0tApowA`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p>Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => {\r\n          return <GifGridItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GifGrid } from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\"Hulk\"]);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategorias={setCategorias} />\r\n      <hr></hr>\r\n\r\n      <ol>\r\n        {categorias.map((category) => {\r\n          return <GifGrid key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport GifExpertApp from \"./components/GifExpertApp\";\nimport \"./index.css\";\n\nconst divRoot = document.querySelector(\"#root\");\n\nReactDom.render(<GifExpertApp />, divRoot);\n"],"sourceRoot":""}